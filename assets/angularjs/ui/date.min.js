angular.module("ui.date",[]).constant("uiDateConfig",{}).directive("uiDate",["uiDateConfig",function(b){var a;a={};angular.extend(a,b);return{require:"?ngModel",link:function(g,f,d,c){var e=function(){return angular.extend({},b,g.$eval(d.uiDate))};var h=function(){var k=false;var j=e();if(c){var i=j.onSelect||angular.noop;j.onSelect=function(m,l){g.$apply(function(){k=true;c.$setViewValue(f.datepicker("getDate"));i(m,l);f.blur()})};j.beforeShow=function(){k=true};j.onClose=function(m,l){k=false};f.off("blur.datepicker").on("blur.datepicker",function(){if(!k){g.$apply(function(){f.datepicker("setDate",f.datepicker("getDate"));c.$setViewValue(f.datepicker("getDate"))})}});c.$render=function(){var l=c.$viewValue;if(angular.isDefined(l)&&l!==null&&!angular.isDate(l)){throw new Error("ng-Model value must be a Date object - currently it is a "+typeof l+" - use ui-date-format to convert it from a string")}f.datepicker("setDate",l)}}f.datepicker("destroy");f.datepicker(j);if(c){c.$render()}};g.$watch(e,h,true)}}}]).constant("uiDateFormatConfig","").directive("uiDateFormat",["uiDateFormatConfig",function(b){var a={require:"ngModel",link:function(g,e,d,f){var c=d.uiDateFormat||b;if(c){f.$formatters.push(function(h){if(angular.isString(h)){return jQuery.datepicker.parseDate(c,h)}return null});f.$parsers.push(function(h){if(h){return jQuery.datepicker.formatDate(c,h)}return null})}else{f.$formatters.push(function(h){if(angular.isString(h)){return new Date(h)}return null});f.$parsers.push(function(h){if(h){return h.toISOString()}return null})}}};return a}]);